name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-bookmarklet:
    name: Test Bookmarklet
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - uses: aquaproj/aqua-installer@v4.0.2
      with:
        aqua_version: v2.53.3
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build bookmarklet
      run: npm run build
    
    - name: Check if bookmarklet builds successfully
      run: |
        if [ ! -f "dist/bookmarklet.min.js" ]; then
          echo "Bookmarklet build failed!"
          exit 1
        fi
        echo "Bookmarklet built successfully"

  test-cli:
    name: Test CLI
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - uses: aquaproj/aqua-installer@v4.0.2
      with:
        aqua_version: v2.53.3
    
    - name: Check formatting
      working-directory: ./cli
      run: deno task fmt:check
      if: matrix.os == 'ubuntu-latest'
    
    - name: Run linter
      working-directory: ./cli
      run: deno task lint
      if: matrix.os == 'ubuntu-latest'
    
    - name: Type check
      working-directory: ./cli
      run: deno task type-check
    
    - name: Run tests
      working-directory: ./cli
      run: deno task test
    
    - name: Generate test coverage
      working-directory: ./cli
      run: deno task test:coverage
      if: matrix.os == 'ubuntu-latest'
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v5
      with:
        directory: ./cli/coverage
        flags: cli
      if: matrix.os == 'ubuntu-latest'
    
    - name: Test CLI execution
      working-directory: ./cli
      run: |
        deno run --allow-read --allow-run src/main.ts --help
        deno run --allow-read --allow-run src/main.ts --name "Test Token" --permissions "contents:read"
    
    - name: Test compilation
      working-directory: ./cli
      run: deno task compile
    
    - name: Test compiled binary
      working-directory: ./cli
      run: |
        ./github-pat-cli --help
        ./github-pat-cli --name "Test Token" --permissions "contents:read"
      if: matrix.os != 'windows-latest'
    
    - name: Test compiled binary (Windows)
      working-directory: ./cli
      run: |
        ./github-pat-cli.exe --help
        ./github-pat-cli.exe --name "Test Token" --permissions "contents:read"
      if: matrix.os == 'windows-latest'
      shell: pwsh